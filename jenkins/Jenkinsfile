pipeline {
    agent any

    environment {
        IMAGE_BACKEND = "tranminh2/user-management-backend"
        IMAGE_FRONTEND = "tranminh2/user-management-frontend"
        DOCKER_COMPOSE_PATH = "docker/docker-compose.yml"
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/quakhubuon/User-Management.git'
            }
        }

        stage('Build Docker Images') {
            steps {
                sh """
                    docker build -t $IMAGE_BACKEND ./backend
                    docker build -t $IMAGE_FRONTEND ./frontend
                """
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh """
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker tag $IMAGE_BACKEND $DOCKER_USER/user-management-backend:latest
                        docker tag $IMAGE_FRONTEND $DOCKER_USER/user-management-frontend:latest
                        docker push $DOCKER_USER/user-management-backend:latest
                        docker push $DOCKER_USER/user-management-frontend:latest
                    """
                }
            }
        }

        stage('Deploy to Railway') {
            steps {
                withCredentials([string(credentialsId: 'railway-token', variable: 'RAILWAY_TOKEN')]) {
                    withEnv(["RAILWAY_TOKEN=$RAILWAY_TOKEN"]) {
                        sh """
                            railway login --token $RAILWAY_TOKEN
                            railway link 
                            railway up --service backend
                            railway up --service frontend
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            echo "Deployment thành công!"
        }
        failure {
            echo "Deployment thất bại!"
        }
    }
}